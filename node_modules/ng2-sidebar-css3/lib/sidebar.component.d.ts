import { AfterContentInit, AfterViewInit, AnimationTransitionEvent, ElementRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { SidebarService } from './sidebar.service';
export declare const SIDEBAR_POSITION: {
    Left: string;
    Right: string;
    Top: string;
    Bottom: string;
};
export declare class Sidebar implements AfterContentInit, AfterViewInit, OnChanges, OnDestroy {
    private _document;
    private sidebarService;
    open: boolean;
    openChange: EventEmitter<boolean>;
    position: string;
    closeOnClickOutside: boolean;
    showOverlay: boolean;
    animate: boolean;
    defaultStyles: boolean;
    sidebarClass: string;
    overlayClass: string;
    ariaLabel: string;
    trapFocus: boolean;
    autoFocus: boolean;
    openOnSlide: boolean;
    threshold: number;
    onOpen: EventEmitter<null>;
    onClose: EventEmitter<null>;
    onAnimationStarted: EventEmitter<AnimationTransitionEvent>;
    onAnimationDone: EventEmitter<AnimationTransitionEvent>;
    _animate: boolean;
    _visibleSidebarState: string;
    _elSidebar: ElementRef;
    translate: any;
    private _onClickOutsideAttached;
    private _focusableElementsString;
    private _focusableElements;
    private _focusedBeforeOpen;
    private subscription;
    private _closeAttached;
    private _elBody;
    private _sliding;
    private closePercentage;
    constructor(_document: any, sidebarService: SidebarService);
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private _setVisibleSidebarState();
    private _open();
    private _close();
    private _setBodyOverflow(value);
    private _manualClose();
    private _setFocusToFirstItem();
    private _trapFocus(e);
    private _setFocused(open);
    private _initCloseOnClickOutside();
    private _destroyCloseOnClickOutside();
    private _onClickOutside(e);
    private _openOnSlide();
    private addEventListener(element, events, fn);
    private slideSidebarStart(e);
    private getSidebarInternalBorder();
    private slideSidebarMove(e);
    private calcTranslatePercentage(e);
    private calcClosePercentage(e);
    private setTranslate();
    private slideSidebarEnd();
    readonly pageX: any;
    readonly width: any;
    readonly innerWidth: number;
}
